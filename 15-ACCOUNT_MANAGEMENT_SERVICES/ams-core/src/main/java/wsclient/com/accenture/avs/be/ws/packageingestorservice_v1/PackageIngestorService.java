package wsclient.com.accenture.avs.be.ws.packageingestorservice_v1;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;
import wsclient.packageingestor.avs.accenture.ports.packageingestorservice_v1.PackageIngestorPort;

/**
 * This class was generated by Apache CXF 2.4.9-redhat-2
 * 2013-05-07T10:09:19.884+02:00
 * Generated source version: 2.4.9-redhat-2
 * 
 */
@WebServiceClient(name = "PackageIngestorService", 
                  wsdlLocation = "file:/development/wsAccenture/AMS/WebContent/WEB-INF/wsdl/PackageIngestor/AVS_PackageIngestor_Service.wsdl",
                  targetNamespace = "http://ws.be.avs.accenture.com/PackageIngestorService-v1") 
public class PackageIngestorService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://ws.be.avs.accenture.com/PackageIngestorService-v1", "PackageIngestorService");
    public final static QName PackageIngestorServicePort = new QName("http://ws.be.avs.accenture.com/PackageIngestorService-v1", "PackageIngestorServicePort");
    static {
        URL url = null;
        try {
            url = new URL("file:/development/wsAccenture/AMS/WebContent/WEB-INF/wsdl/PackageIngestor/AVS_PackageIngestor_Service.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(PackageIngestorService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/development/wsAccenture/AMS/WebContent/WEB-INF/wsdl/PackageIngestor/AVS_PackageIngestor_Service.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public PackageIngestorService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public PackageIngestorService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PackageIngestorService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     *
     * @return
     *     returns PackageIngestorPort
     */
    @WebEndpoint(name = "PackageIngestorServicePort")
    public PackageIngestorPort getPackageIngestorServicePort() {
        return super.getPort(PackageIngestorServicePort, PackageIngestorPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PackageIngestorPort
     */
    @WebEndpoint(name = "PackageIngestorServicePort")
    public PackageIngestorPort getPackageIngestorServicePort(WebServiceFeature... features) {
        return super.getPort(PackageIngestorServicePort, PackageIngestorPort.class, features);
    }

}
